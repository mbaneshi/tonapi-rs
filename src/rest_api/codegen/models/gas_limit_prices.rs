use serde::{Deserialize, Serialize};

/*
 * REST api to TON blockchain explorer
 *
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GasLimitPrices {
    #[serde(rename = "special_gas_limit", skip_serializing_if = "Option::is_none")]
    pub special_gas_limit: Option<i64>,
    #[serde(rename = "flat_gas_limit", skip_serializing_if = "Option::is_none")]
    pub flat_gas_limit: Option<i64>,
    #[serde(rename = "flat_gas_price", skip_serializing_if = "Option::is_none")]
    pub flat_gas_price: Option<i64>,
    #[serde(rename = "gas_price")]
    pub gas_price: i64,
    #[serde(rename = "gas_limit")]
    pub gas_limit: i64,
    #[serde(rename = "gas_credit")]
    pub gas_credit: i64,
    #[serde(rename = "block_gas_limit")]
    pub block_gas_limit: i64,
    #[serde(rename = "freeze_due_limit")]
    pub freeze_due_limit: i64,
    #[serde(rename = "delete_due_limit")]
    pub delete_due_limit: i64,
}

impl GasLimitPrices {
    pub fn new(
        gas_price: i64,
        gas_limit: i64,
        gas_credit: i64,
        block_gas_limit: i64,
        freeze_due_limit: i64,
        delete_due_limit: i64,
    ) -> GasLimitPrices {
        GasLimitPrices {
            special_gas_limit: None,
            flat_gas_limit: None,
            flat_gas_price: None,
            gas_price,
            gas_limit,
            gas_credit,
            block_gas_limit,
            freeze_due_limit,
            delete_due_limit,
        }
    }
}
