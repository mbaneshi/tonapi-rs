use serde::{Deserialize, Serialize};

/*
 * REST api to TON blockchain explorer
 *
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TonTransferAction {
    #[serde(rename = "sender")]
    pub sender: Box<crate::rest_api::codegen::models::AccountAddress>,
    #[serde(rename = "recipient")]
    pub recipient: Box<crate::rest_api::codegen::models::AccountAddress>,
    /// amount in nanotons
    #[serde(rename = "amount")]
    pub amount: i64,
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    #[serde(rename = "encrypted_comment", skip_serializing_if = "Option::is_none")]
    pub encrypted_comment: Option<Box<crate::rest_api::codegen::models::EncryptedComment>>,
    #[serde(rename = "refund", skip_serializing_if = "Option::is_none")]
    pub refund: Option<Box<crate::rest_api::codegen::models::Refund>>,
}

impl TonTransferAction {
    pub fn new(
        sender: crate::rest_api::codegen::models::AccountAddress,
        recipient: crate::rest_api::codegen::models::AccountAddress,
        amount: i64,
    ) -> TonTransferAction {
        TonTransferAction {
            sender: Box::new(sender),
            recipient: Box::new(recipient),
            amount,
            comment: None,
            encrypted_comment: None,
            refund: None,
        }
    }
}
