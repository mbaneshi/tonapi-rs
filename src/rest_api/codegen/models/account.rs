use serde::{Deserialize, Serialize};

/*
 * REST api to TON blockchain explorer
 *
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Account {
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "balance")]
    pub balance: i64,
    /// unix timestamp
    #[serde(rename = "last_activity")]
    pub last_activity: i64,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "interfaces", skip_serializing_if = "Option::is_none")]
    pub interfaces: Option<Vec<String>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "is_scam", skip_serializing_if = "Option::is_none")]
    pub is_scam: Option<bool>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
    #[serde(rename = "memo_required", skip_serializing_if = "Option::is_none")]
    pub memo_required: Option<bool>,
    #[serde(rename = "get_methods")]
    pub get_methods: Vec<String>,
    #[serde(rename = "is_suspended", skip_serializing_if = "Option::is_none")]
    pub is_suspended: Option<bool>,
    #[serde(rename = "is_wallet")]
    pub is_wallet: bool,
}

impl Account {
    pub fn new(
        address: String,
        balance: i64,
        last_activity: i64,
        status: String,
        get_methods: Vec<String>,
        is_wallet: bool,
    ) -> Account {
        Account {
            address,
            balance,
            last_activity,
            status,
            interfaces: None,
            name: None,
            is_scam: None,
            icon: None,
            memo_required: None,
            get_methods,
            is_suspended: None,
            is_wallet,
        }
    }
}
