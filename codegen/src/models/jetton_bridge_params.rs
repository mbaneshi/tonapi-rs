/*
 * REST api to TON blockchain explorer
 *
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JettonBridgeParams {
    #[serde(rename = "bridge_address")]
    pub bridge_address: String,
    #[serde(rename = "oracles_address")]
    pub oracles_address: String,
    #[serde(rename = "state_flags")]
    pub state_flags: i32,
    #[serde(rename = "burn_bridge_fee", skip_serializing_if = "Option::is_none")]
    pub burn_bridge_fee: Option<i64>,
    #[serde(rename = "oracles")]
    pub oracles: Vec<crate::models::Oracle>,
    #[serde(rename = "external_chain_address", skip_serializing_if = "Option::is_none")]
    pub external_chain_address: Option<String>,
    #[serde(rename = "prices", skip_serializing_if = "Option::is_none")]
    pub prices: Option<Box<crate::models::JettonBridgePrices>>,
}

impl JettonBridgeParams {
    pub fn new(bridge_address: String, oracles_address: String, state_flags: i32, oracles: Vec<crate::models::Oracle>) -> JettonBridgeParams {
        JettonBridgeParams {
            bridge_address,
            oracles_address,
            state_flags,
            burn_bridge_fee: None,
            oracles,
            external_chain_address: None,
            prices: None,
        }
    }
}


