/*
 * REST api to TON blockchain explorer
 *
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuctionBidAction {
    #[serde(rename = "auction_type")]
    pub auction_type: AuctionType,
    #[serde(rename = "amount")]
    pub amount: Box<crate::models::Price>,
    #[serde(rename = "nft", skip_serializing_if = "Option::is_none")]
    pub nft: Option<Box<crate::models::NftItem>>,
    #[serde(rename = "bidder")]
    pub bidder: Box<crate::models::AccountAddress>,
    #[serde(rename = "auction")]
    pub auction: Box<crate::models::AccountAddress>,
}

impl AuctionBidAction {
    pub fn new(auction_type: AuctionType, amount: crate::models::Price, bidder: crate::models::AccountAddress, auction: crate::models::AccountAddress) -> AuctionBidAction {
        AuctionBidAction {
            auction_type,
            amount: Box::new(amount),
            nft: None,
            bidder: Box::new(bidder),
            auction: Box::new(auction),
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AuctionType {
    #[serde(rename = "DNS.ton")]
    DnsPeriodTon,
    #[serde(rename = "DNS.tg")]
    DnsPeriodTg,
    #[serde(rename = "NUMBER.tg")]
    NumberPeriodTg,
    #[serde(rename = "getgems")]
    Getgems,
}

impl Default for AuctionType {
    fn default() -> AuctionType {
        Self::DnsPeriodTon
    }
}

